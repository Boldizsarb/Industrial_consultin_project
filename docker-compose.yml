version: '3.8'
services:
  postgresql:
    container_name: industrial-consulting-postgresql 
    image: postgres:latest 
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: industrial_consulting
    ports:
     - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data


  flask:
    container_name: industrial-consulting-flask
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:  
      - "5000:5000"
    depends_on:
      - postgresql
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=industrial_consulting 
      - JWT_SECRET=your_strong_secret_here
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/industrial_consulting
    volumes:
      - ./backend:/app
  

  vuejs:
    container_name: industrial-consulting-vuejs
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:  
      - "8081:8080"
    depends_on:
      - flask
  

  hasura:
    container_name: industrial-consulting-hasura
    build:
      context: ./hasura
      dockerfile: Dockerfile
    image: hasura/graphql-engine:v2.38.0
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgresql:5432/industrial_consulting
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "postegres"
    entrypoint: ["/bin/sh", "-c", "chmod +x /hasura/hasura-entrypoint.sh && /hasura/hasura-entrypoint.sh"]
    restart: always
    volumes:
      - ./hasura:/hasura


volumes: 
  data:
